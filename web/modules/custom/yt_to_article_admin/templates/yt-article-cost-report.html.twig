{#
/**
 * @file
 * Template for YT Article Cost Report.
 *
 * Available variables:
 * - summary: Array of summary statistics
 * - recent_articles: Array of recent article cost data
 * - chart_data: Array of daily cost data
 */
#}
<div class="yt-article-cost-report">
  <h2>{{ 'Cost Summary'|t }}</h2>
  
  <div class="summary-cards">
    <div class="card">
      <h3>{{ 'Total Articles'|t }}</h3>
      <div class="value">{{ summary.total_articles }}</div>
    </div>
    
    <div class="card">
      <h3>{{ 'Total Cost'|t }}</h3>
      <div class="value">${{ summary.total_cost }}</div>
    </div>
    
    <div class="card">
      <h3>{{ 'Average Cost'|t }}</h3>
      <div class="value">${{ summary.average_cost }}</div>
    </div>
    
    <div class="card">
      <h3>{{ 'Total Tokens'|t }}</h3>
      <div class="value">{{ summary.total_tokens|number_format }}</div>
    </div>
  </div>

  <h2>{{ 'Daily Costs (Last 30 Days)'|t }}</h2>
  <div class="chart-container">
    <canvas id="cost-chart"></canvas>
  </div>

  <h2>{{ 'Recent Articles'|t }}</h2>
  <table class="table">
    <thead>
      <tr>
        <th>{{ 'Title'|t }}</th>
        <th>{{ 'Request ID'|t }}</th>
        <th>{{ 'Total Cost'|t }}</th>
        <th>{{ 'Input Tokens'|t }}</th>
        <th>{{ 'Output Tokens'|t }}</th>
        <th>{{ 'Created'|t }}</th>
      </tr>
    </thead>
    <tbody>
      {% for article in recent_articles %}
        <tr>
          <td><a href="{{ path('entity.node.canonical', {'node': article.node_id}) }}">{{ article.title }}</a></td>
          <td><code>{{ article.request_id }}</code></td>
          <td>${{ article.total_cost }}</td>
          <td>{{ article.input_tokens|number_format }}</td>
          <td>{{ article.output_tokens|number_format }}</td>
          <td>{{ article.created|format_date('short') }}</td>
        </tr>
      {% endfor %}
    </tbody>
  </table>
</div>

<style>
.summary-cards {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 20px;
  margin-bottom: 30px;
}

.card {
  background: #f5f5f5;
  padding: 20px;
  border-radius: 8px;
  text-align: center;
}

.card h3 {
  margin: 0 0 10px 0;
  font-size: 14px;
  color: #666;
}

.card .value {
  font-size: 24px;
  font-weight: bold;
  color: #333;
}

.chart-container {
  margin: 20px 0;
  height: 300px;
}

.table {
  width: 100%;
  border-collapse: collapse;
}

.table th,
.table td {
  padding: 10px;
  border: 1px solid #ddd;
  text-align: left;
}

.table th {
  background: #f5f5f5;
  font-weight: bold;
}

.table code {
  background: #f0f0f0;
  padding: 2px 4px;
  border-radius: 3px;
  font-size: 12px;
}
</style>

<script>
// Add Chart.js for visualization
(function() {
  const chartData = {{ chart_data|json_encode|raw }};
  
  // Wait for Chart.js to load
  if (typeof Chart === 'undefined') {
    const script = document.createElement('script');
    script.src = 'https://cdn.jsdelivr.net/npm/chart.js';
    script.onload = function() {
      renderChart();
    };
    document.head.appendChild(script);
  } else {
    renderChart();
  }
  
  function renderChart() {
    const ctx = document.getElementById('cost-chart').getContext('2d');
    new Chart(ctx, {
      type: 'line',
      data: {
        labels: chartData.map(d => d.date),
        datasets: [{
          label: 'Daily Cost (USD)',
          data: chartData.map(d => d.cost),
          borderColor: 'rgb(75, 192, 192)',
          backgroundColor: 'rgba(75, 192, 192, 0.2)',
          tension: 0.1
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        scales: {
          y: {
            beginAtZero: true,
            ticks: {
              callback: function(value) {
                return '$' + value.toFixed(2);
              }
            }
          }
        }
      }
    });
  }
})();
</script>