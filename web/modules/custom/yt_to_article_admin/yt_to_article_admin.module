<?php

/**
 * @file
 * YT to Article Admin module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Access\AccessResult;
use Drupal\Core\Session\AccountInterface;
use Drupal\node\NodeInterface;

/**
 * Implements hook_help().
 */
function yt_to_article_admin_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.yt_to_article_admin':
      $output = '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The YT to Article Admin module tracks cost metrics for YouTube to Article conversions.') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_theme().
 */
function yt_to_article_admin_theme() {
  return [
    'yt_article_cost_report' => [
      'variables' => [
        'summary' => [],
        'recent_articles' => [],
        'chart_data' => [],
      ],
      'template' => 'yt-article-cost-report',
    ],
    'yt_user_metrics' => [
      'variables' => [
        'summary' => [],
        'users' => [],
        'search' => NULL,
        'pagination' => [],
        'refresh_form' => NULL,
      ],
      'template' => 'yt-user-metrics',
    ],
  ];
}

/**
 * Implements hook_node_access().
 */
function yt_to_article_admin_node_access(NodeInterface $node, $op, AccountInterface $account) {
  // Check if this is an article_cost_metrics node
  if ($node->getType() === 'article_cost_metrics') {
    // Only allow access for administrators
    if ($op === 'view') {
      // Check if user has administrator role
      if ($account->hasPermission('administer nodes') || in_array('administrator', $account->getRoles())) {
        return AccessResult::allowed()->cachePerPermissions();
      }
      // Deny access for non-administrators
      return AccessResult::forbidden('Access to cost metrics is restricted to administrators.')
        ->cachePerPermissions();
    }
  }
  
  // No opinion for other content types or operations
  return AccessResult::neutral();
}